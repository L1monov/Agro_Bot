
import re

STOP_WORDS = {
    "упаковка", "упаковке", "упакованная", "упакованный", "упаковки", "окара", "кормовая добавка", "комбикорм",
    "замороженные", "замороженный", "замороженная", "крупы", "крупа", "полуфабрикат", "быстрозамороженные",
    "сушенные", "чипсы", "набор", "вакумная упаковка", "в вакуумной упаковке", "смесь", "коктель", "ассорти",
    "в пакеты из полиэтиленовой пленки", "пленка полиэтиленовая", "консервы", "концентрат", "фрукты", "ягоды",
    "собак", "манка", "товарный знак", "товарным знаком", "агрохимикат", "легион", "наш урожай", "365 дней",
    "то, что надо!", "красная цена", "первым делом", "сушеный", "сушеные", "ассортименте", "свежезамороженные",
    "быстрозамороженная", "жареные", "жареный", "жареная", "жареное", "паста", "пасты", "орехи", "ореховые",
    "ореховая", "кулинарные", "кулинария", "кулинарное", "кулинарная", "каша", "абрикосы", "абрикос", "вок",
    "завтрак", "персик", "персики", "миндаль", "фундук", "кешью", "макадамия", "грецкий орех", "сельдерей",
    "кинза", "петрушка", "укроп", "арахис", "очищеннные", "неочищенные", "клубника", "микс", "миксы", "арбуз", "арбузы"
}

STRICT_PRODUCT_KEYWORDS = {
    "пшеница", "соя", "рожь", "чечевица", "тритикале", "рапс", "ячмень", "свекла", "овес",
    "лен", "лён", "подсолнечник", "сорго", "рис", "вика", "гречиха", "люпин", "пшено",
    "горчица", "просо", "рыжик", "кукуруза", "лук", "картофель", "морковь", "горох",
    "фасоль", "нут", "мука", "масло", "масла", "сахар", "крахмал", "шрот", "жмых",
    "жом", "отруби", "дрожжи"
}


def contains_stop_words(text: str, allow_krahmal=False, allow_maslo=False) -> bool:
    text = (text or "").lower()

    if not allow_krahmal and "крахмал" in text and not re.search(r"\bкрахмал\b", text):
        return True
    if not allow_maslo and re.search(r"\bмасло\b", text):
        return True

    pattern = re.compile(r"\b(" + "|".join(re.escape(w) for w in STOP_WORDS) + r")\b", flags=re.IGNORECASE)
    return bool(pattern.search(text))


def match_product_keywords(selected_keywords: list[str], product_name: str, product_designation: str) -> bool:
    combined_text = f"{product_name} {product_designation}".lower()
    for keyword in selected_keywords:
        keyword = keyword.lower()
        if keyword in STRICT_PRODUCT_KEYWORDS:
            if re.search(rf"\b{re.escape(keyword)}\b", combined_text):
                return True
        else:
            if keyword in combined_text:
                return True
    return False
